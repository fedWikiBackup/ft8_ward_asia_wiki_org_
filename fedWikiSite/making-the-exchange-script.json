{
  "title": "Making the Exchange Script",
  "story": [
    {
      "type": "paragraph",
      "id": "dc7083d591b69104",
      "text": "After a conversation less than two days ago I've taken an idea and turned it into a script with output I rather like. Now seems a good time to reflect on decisions made along the way. [https://github.com/WardCunningham/assets/blob/eb784879b96a86fbc17d948b330260b96869bb7d/pages/spark-decodes/exchange.html github]"
    },
    {
      "type": "paragraph",
      "id": "aac232f1c3e013c4",
      "text": "See [[First Look at Exchanges]]"
    },
    {
      "type": "markdown",
      "id": "832a949ed913e4b6",
      "text": "# Data"
    },
    {
      "type": "paragraph",
      "id": "e852e30d29ef64ca",
      "text": "Spots stream in as a batch of decodes from multiple bands every 15 seconds. What to keep?"
    },
    {
      "type": "paragraph",
      "id": "fb6ad8893461a316",
      "text": "I store broadcast messages, CQ, meaning calling anyone, separate from exchanges meant from one station to another. The first was indexed by a call sign, the latter, a pair in alphabetical order. I can imagine scenarios where this will be insufficient but these failures can be noticed if not resolved from the data I keep."
    },
    {
      "type": "paragraph",
      "id": "7912b55b3567bb44",
      "text": "I save the spots in the payload format they arrive with one exception. I remove fields that are always blank when receiving and others that seemed redundant. This meant the remaining fields showed with useful precision with console.table()."
    },
    {
      "type": "paragraph",
      "id": "20f8fecb32e6750b",
      "text": "My first look showed that exchanges could be usefully examined when downloaded as json first by patching the download logic into a running script and later by making this part of the program. Press download."
    },
    {
      "type": "paragraph",
      "id": "d934b62004b9cdbf",
      "text": "Data collected at a few megabytes an hour. I was unconcerned about this while programming because useful runs were only minutes."
    },
    {
      "type": "paragraph",
      "id": "10b9de341e3ebf8d",
      "text": "I started purging whole exchanges based on the time of last entry discarding those that weren't heard recently. This kept some too long and others not long enough. I switched to selecting based on the first entry, when the exchange was first recorded. This was easier to understand and cut off stations that called another incessantly rather than bloating my output."
    },
    {
      "type": "markdown",
      "id": "2696626c3d20f668",
      "text": "# Display"
    },
    {
      "type": "paragraph",
      "id": "71ff7c12edcbf884",
      "text": "My first output was just the exchange keys plus a few characteristic values easily extracted from the spots. I added click logic to these and showed contents in the console log. I had to poke at quite a few to find exchanges that looked interesting. They are rare."
    },
    {
      "type": "paragraph",
      "id": "380b9fc670ccc65c",
      "text": "I wanted tabular output with a rows somehow tied to time and cells big enough for a whole exchange. I was thinking minutes but learned quickly that a row of just one 15 second slot was going to have to wrap around if it is to fit."
    },
    {
      "type": "paragraph",
      "id": "a17f70629b633d47",
      "text": "It was hard to tell what was going on when some rows wrapped and others not. My solution was to add interstitial rows showing the clock when time advanced."
    },
    {
      "type": "paragraph",
      "id": "94450c1fb3c8956a",
      "text": "I had visions of incrementally updating cells when new data arrived and may still do that. For the moment I just regenerate the whole display with every payload and accept that it can be slightly jumpy."
    },
    {
      "type": "paragraph",
      "id": "f8d4efa11d062daa",
      "text": "I highlight cells with complete exchanges which I define as having a 73 as their last transmission. I add the CQ from the broadcast data if there appears to be one appropriate. We can never be sure why one station calls another but this is a good guess."
    },
    {
      "type": "paragraph",
      "id": "6d4a005ba8abba00",
      "text": "I like the way cells at the top and bottom of the table are incomplete in different ways. It is easy to scan for interesting recordings which are often in the middle rows. They are bold and start with CQ. That means we're likely hearing both participants. "
    },
    {
      "type": "paragraph",
      "id": "361abd1336a34724",
      "text": "I found long exchanges hard to follow. I now offset odd slots by two spaces which helps."
    },
    {
      "type": "markdown",
      "id": "cbfc1e3d64e5dffc",
      "text": "# Search"
    },
    {
      "type": "paragraph",
      "id": "a4dac978317e2d1b",
      "text": "I added a parameter search=word which highlights were that word is used. Multiple words work separated by spaces. Built-in default searches for a few respected callsigns."
    },
    {
      "type": "paragraph",
      "id": "c23643944be1e2b2",
      "text": "My first implementation handled clicks on a cell and searched for both operators involved. This was always confusing. Now click on individual work to find and highlight just this. Works great for maidenhead coordinates too."
    },
    {
      "type": "markdown",
      "id": "6fa078bcdf4ae152",
      "text": "# Future"
    },
    {
      "type": "paragraph",
      "id": "cd11a2953fd18e9b",
      "text": "I'm ready to set this program aside as it already represents the idea well and I have more distinctly different things I'd like to explore. I do have a few things I know I could do better and will mention them here for the record."
    },
    {
      "type": "paragraph",
      "id": "890d561910e66246",
      "text": "I'd like to show signal strength of each transmission using the color code I've used in the Signals script. These could be little squares in front of each transmission."
    },
    {
      "type": "paragraph",
      "id": "266ca1806b565e5f",
      "text": "I could compare timestamps between adjacent entries and notice where some transmissions are missing. How missing is missing?"
    },
    {
      "type": "paragraph",
      "id": "411cd31d71fb18a6",
      "text": "It might be interesting to know which bands host which exchanges. This could be a faint background color using the yet to be implemented band color code standard I wish I had in the Bands script."
    },
    {
      "type": "paragraph",
      "id": "edb2385eff6c09a7",
      "text": "I've preserved the single column exchange summary output which would be a good fit on a federated wiki page. Click could open new pages with the transcript, possibly annotated, and other metadata like maps, google links or even operating history should we keep that somewhere."
    },
    {
      "type": "paragraph",
      "id": "7b757e36d19d7a33",
      "text": "See [[Digital Exchanges Explained]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Making the Exchange Script",
        "story": []
      },
      "date": 1606058418571
    },
    {
      "item": {
        "type": "factory",
        "id": "dc7083d591b69104"
      },
      "id": "dc7083d591b69104",
      "type": "add",
      "date": 1606058462819
    },
    {
      "type": "edit",
      "id": "dc7083d591b69104",
      "item": {
        "type": "paragraph",
        "id": "dc7083d591b69104",
        "text": "After a conversation less than two days ago I've taken an idea and turned it into a script with output I rather like. Now seems a good time to reflect on decisions made along the way."
      },
      "date": 1606058680628
    },
    {
      "type": "add",
      "id": "aac232f1c3e013c4",
      "item": {
        "type": "paragraph",
        "id": "aac232f1c3e013c4",
        "text": "See [[First Look at Exchanges]]"
      },
      "after": "dc7083d591b69104",
      "date": 1606058698551
    },
    {
      "type": "add",
      "id": "832a949ed913e4b6",
      "item": {
        "type": "paragraph",
        "id": "832a949ed913e4b6",
        "text": "# Data"
      },
      "after": "aac232f1c3e013c4",
      "date": 1606058750174
    },
    {
      "type": "add",
      "id": "e852e30d29ef64ca",
      "item": {
        "type": "paragraph",
        "id": "e852e30d29ef64ca",
        "text": "Spots stream in as a batch of decodes from multiple bands every 15 seconds. What to keep?"
      },
      "after": "832a949ed913e4b6",
      "date": 1606058930667
    },
    {
      "type": "add",
      "id": "fb6ad8893461a316",
      "item": {
        "type": "paragraph",
        "id": "fb6ad8893461a316",
        "text": "I store broadcast messages, CQ, meaning calling anyone, separate from exchanges meant from one station to another. The first was indexed by a call sign, the latter, a pair in alphabetical order."
      },
      "after": "e852e30d29ef64ca",
      "date": 1606059177352
    },
    {
      "type": "edit",
      "id": "fb6ad8893461a316",
      "item": {
        "type": "paragraph",
        "id": "fb6ad8893461a316",
        "text": "I store broadcast messages, CQ, meaning calling anyone, separate from exchanges meant from one station to another. The first was indexed by a call sign, the latter, a pair in alphabetical order. I can imagine scenarios where this will be insufficient but these failures can be noticed if not resolved from the data I keep."
      },
      "date": 1606059272988
    },
    {
      "type": "edit",
      "id": "832a949ed913e4b6",
      "item": {
        "type": "markdown",
        "id": "832a949ed913e4b6",
        "text": "# Data"
      },
      "date": 1606059277532
    },
    {
      "type": "add",
      "id": "7912b55b3567bb44",
      "item": {
        "type": "paragraph",
        "id": "7912b55b3567bb44",
        "text": "I save the spots in the payload format they arrive with one exception. I remove fields that are always blank when receiving and others that seemed redundant. This meant the remaining fields showed with useful precision with console.table(spot)"
      },
      "after": "fb6ad8893461a316",
      "date": 1606059427211
    },
    {
      "type": "edit",
      "id": "7912b55b3567bb44",
      "item": {
        "type": "paragraph",
        "id": "7912b55b3567bb44",
        "text": "I save the spots in the payload format they arrive with one exception. I remove fields that are always blank when receiving and others that seemed redundant. This meant the remaining fields showed with useful precision with console.table()"
      },
      "date": 1606059501806
    },
    {
      "type": "edit",
      "id": "7912b55b3567bb44",
      "item": {
        "type": "paragraph",
        "id": "7912b55b3567bb44",
        "text": "I save the spots in the payload format they arrive with one exception. I remove fields that are always blank when receiving and others that seemed redundant. This meant the remaining fields showed with useful precision with console.table()."
      },
      "date": 1606059515468
    },
    {
      "type": "add",
      "id": "20f8fecb32e6750b",
      "item": {
        "type": "paragraph",
        "id": "20f8fecb32e6750b",
        "text": "My first look showed that exchanges could be usefully examined when downloaded as json first by patching the download logic into a running script and later by making this part of the program. Press download."
      },
      "after": "7912b55b3567bb44",
      "date": 1606059705266
    },
    {
      "type": "add",
      "id": "d934b62004b9cdbf",
      "item": {
        "type": "paragraph",
        "id": "d934b62004b9cdbf",
        "text": "Data collected at a few megabytes an hour. I was unconcerned about this while programming because useful runs were only minutes, I started purging whole exchanges based on the time of last entry discarding those that weren't heard recently. This kept some to long and others not long enough. I switched to selecting based on the first entry, when the exchange was first recorded. This was easier to understand and cut off stations that called another incessantly rather than bloating my output."
      },
      "after": "20f8fecb32e6750b",
      "date": 1606060212902
    },
    {
      "type": "edit",
      "id": "d934b62004b9cdbf",
      "item": {
        "type": "paragraph",
        "id": "d934b62004b9cdbf",
        "text": "Data collected at a few megabytes an hour. I was unconcerned about this while programming because useful runs were only minutes."
      },
      "date": 1606060239107
    },
    {
      "type": "add",
      "id": "10b9de341e3ebf8d",
      "item": {
        "type": "paragraph",
        "id": "10b9de341e3ebf8d",
        "text": "I started purging whole exchanges based on the time of last entry discarding those that weren't heard recently. This kept some to long and others not long enough. I switched to selecting based on the first entry, when the exchange was first recorded. This was easier to understand and cut off stations that called another incessantly rather than bloating my output."
      },
      "after": "d934b62004b9cdbf",
      "date": 1606060240248
    },
    {
      "type": "edit",
      "id": "10b9de341e3ebf8d",
      "item": {
        "type": "paragraph",
        "id": "10b9de341e3ebf8d",
        "text": "I started purging whole exchanges based on the time of last entry discarding those that weren't heard recently. This kept some too long and others not long enough. I switched to selecting based on the first entry, when the exchange was first recorded. This was easier to understand and cut off stations that called another incessantly rather than bloating my output."
      },
      "date": 1606060328598
    },
    {
      "type": "add",
      "id": "2696626c3d20f668",
      "item": {
        "type": "paragraph",
        "id": "2696626c3d20f668",
        "text": "# Display"
      },
      "after": "10b9de341e3ebf8d",
      "date": 1606060365686
    },
    {
      "type": "add",
      "id": "71ff7c12edcbf884",
      "item": {
        "type": "paragraph",
        "id": "71ff7c12edcbf884",
        "text": "My first output was just the exchange keys plus a few characteristic values easily extracted from the spots. I added click logic to these and showed contents in the console log. I had to poke at quite a few to find exchanges that looked interesting. They are rare."
      },
      "after": "2696626c3d20f668",
      "date": 1606060534517
    },
    {
      "type": "edit",
      "id": "2696626c3d20f668",
      "item": {
        "type": "markdown",
        "id": "2696626c3d20f668",
        "text": "# Display"
      },
      "date": 1606060543519
    },
    {
      "type": "add",
      "id": "380b9fc670ccc65c",
      "item": {
        "type": "paragraph",
        "id": "380b9fc670ccc65c",
        "text": "I wanted tabular output with a rows somehow tied to time and cells big enough for a whole exchange. I was thinking minutes but learned quickly that a row of just one 15 second slot was going to have to wrap around if it is to fit."
      },
      "after": "71ff7c12edcbf884",
      "date": 1606060801139
    },
    {
      "type": "add",
      "id": "a17f70629b633d47",
      "item": {
        "type": "paragraph",
        "id": "a17f70629b633d47",
        "text": "It was hard to tell what was going on when some rows wrapped and others not. My solution was to add interstitial rows showing the clock when time advanced."
      },
      "after": "380b9fc670ccc65c",
      "date": 1606060971672
    },
    {
      "type": "add",
      "id": "94450c1fb3c8956a",
      "item": {
        "type": "paragraph",
        "id": "94450c1fb3c8956a",
        "text": "I had visions of incrementally updating cells when new data arrived and may still do that. For the moment I just regenerate the whole display with every payload and accept that it can be slightly jumpy."
      },
      "after": "a17f70629b633d47",
      "date": 1606061082819
    },
    {
      "type": "add",
      "id": "f8d4efa11d062daa",
      "item": {
        "type": "paragraph",
        "id": "f8d4efa11d062daa",
        "text": "I highlight cells with complete exchanges which I define as having a 73 as their last transmission. I add the CQ from the broadcast data if there appears to be one appropriate. We can never be sure why one station calls another but this is a good guess."
      },
      "after": "94450c1fb3c8956a",
      "date": 1606061400007
    },
    {
      "type": "add",
      "id": "6d4a005ba8abba00",
      "item": {
        "type": "paragraph",
        "id": "6d4a005ba8abba00",
        "text": "I like the way cells at the top and bottom of the table are incomplete in different ways. It is easy to scan for interesting recordings which are often in the middle rows. They are bold and start with CQ. That means we're likely hearing both participants. "
      },
      "after": "f8d4efa11d062daa",
      "date": 1606061641467
    },
    {
      "type": "edit",
      "id": "dc7083d591b69104",
      "item": {
        "type": "paragraph",
        "id": "dc7083d591b69104",
        "text": "After a conversation less than two days ago I've taken an idea and turned it into a script with output I rather like. Now seems a good time to reflect on decisions made along the way. [https://github.com/WardCunningham/assets/blob/eb784879b96a86fbc17d948b330260b96869bb7d/pages/spark-decodes/exchange.html github]"
      },
      "date": 1606061888550
    },
    {
      "type": "add",
      "id": "6fa078bcdf4ae152",
      "item": {
        "type": "paragraph",
        "id": "6fa078bcdf4ae152",
        "text": "# Future"
      },
      "after": "6d4a005ba8abba00",
      "date": 1606062025763
    },
    {
      "type": "add",
      "id": "cd11a2953fd18e9b",
      "item": {
        "type": "paragraph",
        "id": "cd11a2953fd18e9b",
        "text": "I'm ready to set this program aside as it already represents the idea well and I have more distinctly different things I'd like to explore. I do have a few things I know I could do better and will mention them here for the record."
      },
      "after": "6fa078bcdf4ae152",
      "date": 1606062147466
    },
    {
      "type": "edit",
      "id": "6fa078bcdf4ae152",
      "item": {
        "type": "markdown",
        "id": "6fa078bcdf4ae152",
        "text": "# Future"
      },
      "date": 1606062151166
    },
    {
      "type": "add",
      "id": "890d561910e66246",
      "item": {
        "type": "paragraph",
        "id": "890d561910e66246",
        "text": "I'd like to show signal strength of each transmission using the color code I've used in the Signals script. These could be little squares in front of each transmission."
      },
      "after": "cd11a2953fd18e9b",
      "date": 1606062236314
    },
    {
      "type": "add",
      "id": "411cd31d71fb18a6",
      "item": {
        "type": "paragraph",
        "id": "411cd31d71fb18a6",
        "text": "It might be interesting to know which bands host which exchanges. This could be a faint background color using the yet to be implemented band color code standard I wish I had in the Bands script."
      },
      "after": "890d561910e66246",
      "date": 1606062362436
    },
    {
      "type": "add",
      "id": "edb2385eff6c09a7",
      "item": {
        "type": "paragraph",
        "id": "edb2385eff6c09a7",
        "text": "I've preserved the single column exchange summary output which would be a good fit on a federated wiki page. Click could open new pages with the transcript, possibly annotated, and other metadata like maps, google links or even operating history should we keep that somewhere."
      },
      "after": "411cd31d71fb18a6",
      "date": 1606062613749
    },
    {
      "type": "add",
      "id": "266ca1806b565e5f",
      "item": {
        "type": "paragraph",
        "id": "266ca1806b565e5f",
        "text": "I could compare timestamps between adjacent entries and notice where some transmissions are missing. How missing is missing?"
      },
      "after": "890d561910e66246",
      "date": 1606063390846
    },
    {
      "type": "add",
      "id": "361abd1336a34724",
      "item": {
        "type": "paragraph",
        "id": "361abd1336a34724",
        "text": "I found long exchanges hard to follow. I now offset odd slots by two spaces which helps."
      },
      "after": "6d4a005ba8abba00",
      "date": 1606107953882
    },
    {
      "type": "add",
      "id": "cbfc1e3d64e5dffc",
      "item": {
        "type": "paragraph",
        "id": "cbfc1e3d64e5dffc",
        "text": "# Search"
      },
      "after": "361abd1336a34724",
      "date": 1606107965353
    },
    {
      "type": "add",
      "id": "a4dac978317e2d1b",
      "item": {
        "type": "paragraph",
        "id": "a4dac978317e2d1b",
        "text": "I added a parameter search=word which highlights were that word is used. Multiple words work separated by spaces. Built-in default searches for a few respected callsigns."
      },
      "after": "cbfc1e3d64e5dffc",
      "date": 1606108212346
    },
    {
      "type": "add",
      "id": "c23643944be1e2b2",
      "item": {
        "type": "paragraph",
        "id": "c23643944be1e2b2",
        "text": "My first implementation handled clicks on a cell and searched for both operators involved. This was always confusing. Now click on individual work to find and highlight just this. Works great for maidenhead coordinates too."
      },
      "after": "a4dac978317e2d1b",
      "date": 1606108341929
    },
    {
      "type": "edit",
      "id": "cbfc1e3d64e5dffc",
      "item": {
        "type": "markdown",
        "id": "cbfc1e3d64e5dffc",
        "text": "# Search"
      },
      "date": 1606108346728
    },
    {
      "item": {
        "type": "factory",
        "id": "7b757e36d19d7a33"
      },
      "id": "7b757e36d19d7a33",
      "type": "add",
      "after": "edb2385eff6c09a7",
      "date": 1606144245180
    },
    {
      "type": "edit",
      "id": "7b757e36d19d7a33",
      "item": {
        "type": "paragraph",
        "id": "7b757e36d19d7a33",
        "text": "See [[Digital Exchanges Explained]]"
      },
      "date": 1606144286184
    }
  ]
}